input {
  # Twitter/X API (usando Twitter API v2)
  exec {
    command => "python3 /usr/share/logstash/scripts/twitter_collector.py"
    interval => 300
    type => "twitter"
    tags => ["social", "twitter"]
  }
  
  # Reddit API
  exec {
    command => "python3 /usr/share/logstash/scripts/reddit_collector.py"
    interval => 600
    type => "reddit"
    tags => ["social", "reddit"]
  }
  
  # Webhook per real-time social mentions
  http {
    port => 8080
    type => "social_webhook"
    tags => ["webhook", "social"]
  }
}

filter {
  # Parse JSON from scripts
  if [type] in ["twitter", "reddit"] {
    json {
      source => "message"
    }
  }
  
  # Process Twitter data
  if [type] == "twitter" {
    mutate {
      rename => { "text" => "content" }
      rename => { "created_at" => "published_at" }
      rename => { "user" => "author" }
      add_field => { "platform" => "twitter" }
    }
    
    # Extract hashtags and mentions
    grok {
      match => { "content" => "(?<hashtags>#[A-Za-z0-9_]+)" }
      tag_on_failure => []
    }
    
    grok {
      match => { "content" => "(?<mentions>@[A-Za-z0-9_]+)" }
      tag_on_failure => []
    }
  }
  
  # Process Reddit data
  if [type] == "reddit" {
    mutate {
      rename => { "title" => "content" }
      rename => { "created_utc" => "published_at" }
      add_field => { "platform" => "reddit" }
    }
    
    # Convert Unix timestamp
    date {
      match => [ "published_at", "UNIX" ]
      target => "@timestamp"
    }
  }
  
  # Extract financial symbols from social content
  grok {
    match => { 
      "content" => "(?<ticker_symbols>\$[A-Z]{1,5}|\b[A-Z]{1,5}\b)" 
    }
    tag_on_failure => []
  }
  
  # Sentiment keywords detection
  if [content] =~ /(?i)(bullish|buy|long|moon|rocket|diamond hands|hodl|to the moon|calls|bull|pump|green|gains|profit|rally|breakout|support|resistance|dip|opportunity)/ {
    mutate {
      add_tag => ["positive_sentiment"]
      add_field => { "sentiment_hint" => "positive" }
    }
  }
  
  if [content] =~ /(?i)(bearish|sell|short|crash|dump|bear|red|loss|panic|fear|puts|bubble|overvalued|correction|recession|decline|drop|fall)/ {
    mutate {
      add_tag => ["negative_sentiment"]
      add_field => { "sentiment_hint" => "negative" }
    }
  }
  
  # Calculate engagement score
  ruby {
    code => "
      retweets = event.get('retweet_count').to_i
      likes = event.get('favorite_count').to_i
      replies = event.get('reply_count').to_i
      
      engagement_score = (retweets * 3) + (likes * 1) + (replies * 2)
      event.set('engagement_score', engagement_score)
    "
  }
  
  # Add processing metadata
  mutate {
    add_field => { "ingested_at" => "%{@timestamp}" }
    add_field => { "data_type" => "social" }
  }
}

output {
  # Send to Kafka for sentiment analysis
  kafka {
    topic_id => "social-sentiment"
    bootstrap_servers => "kafka:9092"
    codec => json
  }
  
  # Index in Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "social-sentiment-%{+YYYY.MM.dd}"
    document_type => "_doc"
  }
  
  # Debug output
  stdout { 
    codec => rubydebug {
      metadata => false
    }
  }
}